
FROM ubuntu:18.04
WORKDIR /home/docker-build/

RUN apt-get update && apt install ca-certificates -y

RUN echo "deb  http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse" >/etc/apt/sources.list && \
    echo "deb-src   http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb  http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb-src  http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb  http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb-src  http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb  http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse" >>/etc/apt/sources.list

# Set timezone
RUN apt-get update -y && apt-get install -y systemd apt-utils sudo iputils-ping --fix-missing
RUN echo "Asia/Shanghai" | tee /etc/timezone
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime

RUN sudo apt-get -y install build-essential libhdf5-dev pkg-config  libatlas-base-dev gfortran software-properties-common  libhdf5-serial-dev python-tables python3-dev
RUN sudo apt-get -y install --no-install-recommends   git   mercurial   openssh-client   subversion     procps && rm -rf /var/lib/apt/lists/*
RUN sudo apt-get update && sudo apt-get -y install --no-install-recommends   ca-certificates   curl   netbase   wget  && rm -rf /var/lib/apt/lists/*

# Install net-tools
RUN ln -s /lib /lib64
RUN apt-get update && apt-get install -y net-tools iproute2 openssl vim build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev wget libbz2-dev

# Set ENTRYPOINT
ENTRYPOINT ["/sbin/init"]
# Install unify controller
COPY ./unifi_sysvinit_all.deb .
RUN  apt install -y ./unifi_sysvinit_all.deb

# control log level. 0-DEBUG, 1-INFO, 2-WARNING, 3-ERROR, default level is WARNING.
ENV GLOG_v=2

# build 
# docker build -f ./Dockerfile_unify_controller.yml . -t unifycontroller:6.0.23
# Start docker 
# docker run -tid --name unifycontroller -p 8443:8443 --privileged=true unifycontroller:6.0.23  /sbin/init
# docker exec -it <> /bin/bash